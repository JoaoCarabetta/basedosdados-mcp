[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "basedosdados-mcp"
version = "0.1.0"
description = "Model Context Protocol server for Base dos Dados (Brazilian open data platform)"
readme = "README.md"
requires-python = ">=3.10,<=3.14"
license = "MIT"
authors = [
    {name = "João Carabetta", email = "joao.carabetta@gmail.com"}
]
maintainers = [
    {name = "João Carabetta", email = "joao.carabetta@gmail.com"}
]
keywords = ["mcp", "brazil", "data", "bigquery", "government", "open-data"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
dependencies = [
    "mcp[cli]>=1.0.0",
    "httpx>=0.25.0",
    "fastmcp>=2.10.1",
    "google-cloud-bigquery>=3.0.0",
    "db-dtypes>=1.0.0",
]


[project.urls]
Homepage = "https://github.com/JoaoCarabetta/basedosdados-mcp"
Documentation = "https://github.com/JoaoCarabetta/basedosdados-mcp#readme"
Repository = "https://github.com/JoaoCarabetta/basedosdados-mcp"
"Bug Tracker" = "https://github.com/JoaoCarabetta/basedosdados-mcp/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
]

[project.scripts]
basedosdados-mcp = "basedosdados_mcp.main:main"
basedosdados-mcp-dev = "basedosdados_mcp.main:dev_main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 100
target-version = ['py38']

[tool.ruff]
line-length = 100
target-version = "py38"
select = ["E", "F", "W", "B", "I"]
ignore = []

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "live: mark test as requiring live MCP server (may be slow)",
    "encoding: mark test as encoding-related"
]
